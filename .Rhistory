library(here)
here
here()
library(usethis)
library(here)
library(usethis)
library(tidyverse)
library(broom)
library(mapview)
library(broom)
install.packages("mapview")
library(mapview)
library(mapview)
library(sf)
library(sp)
library(spdep)
library(car)
library(fs)
library(janitor)
?download.file
download.file("https://data.london.gov.uk/download/statistical-gis-boundary-files-london/9ba8c833-6370-4b11-abdc-314aa020d5e0/statistical-gis-boundaries-london.zip", destfile="prac7_data/statistical-gis-boundaries-london.zip")
download.file("https://data.london.gov.uk/download/statistical-gis-boundary-files-london/9ba8c833-6370-4b11-abdc-314aa020d5e0/statistical-gis-boundaries-london.zip", destfile="statistical-gis-boundaries-london.zip")
download.file("https://data.london.gov.uk/download/statistical-gis-boundary-files-london/9ba8c833-6370-4b11-abdc-314aa020d5e0/statistical-gis-boundaries-london.zip", destfile="statistical-gis-boundaries-london.zip")
library(fs)
listfiles <- dir_info(here::here()) %>%
dplyr::filter(str_detect(path, ".zip")) %>%
dplyr::select(path) %>%
pull() %>%
# print out the .gz file
print() %>%
as.character() %>%
utils::unzip(exdir=here::here())
listfiles
Londonward <- fs::dir_info(here::here("statistical-gis-boundaries-london"), "ESRI")
Londonward <- fs::dir_info(here::here("statistical-gis-boundaries-london", "ESRI"))
Londonward
Londonward <- fs::dir_info(here::here("statistical-gis-boundaries-london", "ESRI")) %>%
# $ means exact match
dplyr::filter(str_detect(path, "London_Ward_CityMerged.shp$")) %>%
dplyr::select(path) %>%
dplyr::pull() %>%
# read the file in
sf::st_read()
# chec the data
rm(Londonward)
Londonwards <- fs::dir_info(here::here("statistical-gis-boundaries-london", "ESRI")) %>%
# $ means exact match
dplyr::filter(str_detect(path, "London_Ward_CityMerged.shp$")) %>%
dplyr::select(path) %>%
dplyr::pull() %>%
# read the file in
sf::st_read()
# check the data
qtm(Londonwards)
library(tmap)
# check the data
qtm(Londonwards)
# read in some attribute data
LondonWardProfiles <- read_csv("https://data.london.gov.uk/download/ward-profiles-and-atlas/772d2d64-e8c6-46cb-86f9-e52b4c7851bc/ward-profiles-excel-version.csv", col_names = TRUE, locals = locale(encoding = 'Latin1'))
# read in some attribute data
LondonWardProfiles <- read_csv("https://data.london.gov.uk/download/ward-profiles-and-atlas/772d2d64-e8c6-46cb-86f9-e52b4c7851bc/ward-profiles-excel-version.csv", col_names = TRUE, locale = locale(encoding = 'Latin1'))
# check all of the columns have been read in correctly
Datatypelist <- LondonWardProfiles %>%
summarise_all(class) %>%
pivot_longer(everything(),
names_to = "All_variables",
values_to = "Variable_class")
Datatypelits
Datatypelists
Datatypelist
View(Datatypelist)
LondonWardProfiles <- read_csv("https://data.london.gov.uk/download/ward-profiles-and-atlas/772d2d64-e8c6-46cb-86f9-e52b4c7851bc/ward-profiles-excel-version.csv",
na = c("", "NA", "n/a"),
locale = locale(encoding = 'Latin1'),
col_names = TRUE)
# check all of the columns have been read in correctly
Datatypelists <- LondonWardProfiles %>%
summarise_all(class) %>%
pivot_longer(everything(),
names_to = "All_variables",
values_to = "Variable_class")
rm(Datatypelists)
# check all of the columns have been read in correctly
Datatypelist <- LondonWardProfiles %>%
summarise_all(class) %>%
pivot_longer(everything(),
names_to = "All_variables",
values_to = "Variable_class")
Datatypelist
# merge boundaries and data
LonWardProfiles <- Londonwards %>%
left_join(.,
LondonWardProfiles,
by = c("GSS_CODE" = "New code"))
# let's map out dependent variable to see if the join has worked:
tmap_mode("plot")
qtm(LonWardProfiles,
fill = "Average GCSE capped point scores - 2014",
borders = NULL,
fill.palette = "Blues")
# might be a good idea to see where the secondary schools are in London too
london_schools <- read_csv("https://data.london.gov.uk/download/london-schools-atlas/57046151-39a0-45d9-8dc0-27ea7fd02de8/all_schools_xy_2016.csv")
# from the coordinate values stored in the x and y columns, which look like they are latitude and longitude values, create a new points dataset
lon_school_sf <- st_as_sf(london_schools,
coords = c("x", "y"),
crs = 4326)
lond_sec_schools_sf <- lon_schools_sf %>%
filter(PHASES=="Secondary")
lond_sec_schools_sf <- lon_schools_sf %>%
filter(PHASE=="Secondary")
# from the coordinate values stored in the x and y columns, which look like they are latitude and longitude values, create a new points dataset
lon_schools_sf <- st_as_sf(london_schools,
coords = c("x", "y"),
crs = 4326)
rm(lon_school_sf)
lond_sec_schools_sf <- lon_schools_sf %>%
filter(PHASE=="Secondary")
lon_sec_schools_sf <- lon_schools_sf %>%
filter(PHASE=="Secondary")
rm(lond_sec_schools_sf)
qtm(lon_sec_schools_sf)
